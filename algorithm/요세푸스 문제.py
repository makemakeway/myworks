# 1번부터 N번까지 N명의 사람이 원을 이루면서 앉아있고, 양의 정수 K(≤ N)가 주어진다.
# 이제 순서대로 K번째 사람을 제거한다. 한 사람이 제거되면 남은 사람들로 이루어진 원을 따라 
# 이 과정을 계속해 나간다. 이 과정은 N명의 사람이 모두 제거될 때까지 계속된다. 
# 원에서 사람들이 제거되는 순서를 (N, K)-요세푸스 순열이라고 한다. 
# 예를 들어 (7, 3)-요세푸스 순열은 <3, 6, 2, 7, 5, 1, 4>이다.

# N과 K가 주어지면 (N, K)-요세푸스 순열을 구하는 프로그램을 작성하시오.

import sys

N, K = map(int, sys.stdin.readline().strip().split())
circle = list(range(1, N+1)) # 1~N번의 사람으로 이루어진 리스트
order = [] # 제거된 사람들이 모일 리스트
Idx = 0 # 제거할 사람의 인덱스 번호

for i in range(N):
    Idx += K - 1 # 인덱스를 구하는 것이므로, 번호에 -1을 해줌
    if Idx >= len(circle): # 한바퀴를 돌았을 경우, 나머지로 인덱스를 초기화
        Idx %= len(circle)
    order.append(str(circle.pop(Idx)))
order = ', '.join(order) #출력을 <3, 6, 2, 7, 5, 1, 4> 이런 형식으로 해야하므로, 문자열 자료형으로 합쳐줌
print("<%s>"%order)